services:

#docker-compose -f docker-compose.pc2.yml down --volumes --remove-orphans

#  docker-compose -f docker-compose.pc1.yml up --build -d
#  docker-compose -f docker-compose.pc2.yml up --build -d
#  docker-compose -f docker-compose.pc3.yml up --build -d

  postgres:
    image: postgres:14
    container_name: postgres_easycab
    environment:
      POSTGRES_DB: easycab
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      easycab_network:
        ipv4_address: 192.168.1.100
    volumes:
      - postgres_data:/var/lib/postgresql/data

  ec_central:
    build:
      context: .
      dockerfile: ./EC_Central/Dockerfile
    image: ec-central:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://192.168.1.100:5432/easycab
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP-SERVERS: 192.168.1.3:9092
      SERVER_PORT: 8081
      BROKER_ADDRESS: 192.168.1.3:9092
      CTC_URL: http://192.168.1.200:8082/traffic
    ports:
      - "8081:8081"
      - "9090:9090"
    networks:
      easycab_network:
        ipv4_address: 192.168.1.4

    depends_on:
      - postgres

  ec_ctc:
    container_name: ec_ctc
    build:
      context: .
      dockerfile: ./EC_CTC/Dockerfile
    image: ec-ctc:latest
    ports:
      - "8082:8082"
    networks:
      easycab_network:
        ipv4_address: 192.168.1.200 # IP fija para ec_ctc

  nginx:
    build:
      context: ./taxi-tracker-nginx  # Ruta del directorio donde está el Dockerfile
      dockerfile: Dockerfile  # Nombre de tu archivo Dockerfile (puedes omitirlo si se llama "Dockerfile")
    container_name: taxi-tracker-nginx
    ports:
      - "8080:80"  # Mapea el puerto 80 del contenedor al puerto 8080 de la máquina
    networks:
      - easycab_network
    depends_on:
      - ec_central

networks:
  easycab_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

volumes:
  postgres_data:
