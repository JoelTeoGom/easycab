<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b8c5b401-c15d-402e-ace1-91795e06d5ae" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EC_Customer/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/EC_Customer/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EC_DE/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/EC_DE/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EC_LOGGING/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/EC_LOGGING/docker-compose.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/deployment/generate_docker_compose.sh" beforeDir="false" afterPath="$PROJECT_DIR$/deployment/generate_docker_compose.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.pc1.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.pc1.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.pc2.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.pc2.yml" afterDir="false" />
    </list>
    <list id="956bf02e-6de2-49bc-9a06-9f1b590a966a" name="Changes by joelt" comment="">
      <change beforePath="$PROJECT_DIR$/EC_Central/src/main/java/org/example/ec_central/service/KafkaService.java" beforeDir="false" afterPath="$PROJECT_DIR$/EC_Central/src/main/java/org/example/ec_central/service/KafkaService.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myAllFileTypesSelected" value="false" />
    <option name="mySelectedFileTypes">
      <set>
        <option value="JAVA" />
      </set>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;carlosmgarcia-02&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:JoelTeoGom/easycab.git&quot;,
    &quot;accountId&quot;: &quot;69477803-2a31-402c-a446-389d94905c17&quot;
  }
}</component>
  <component name="JpbToolWindowState">
    <option name="isToolWindowVisible" value="false" />
  </component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myAllFileTypesSelected" value="false" />
    <option name="mySelectedFileTypes">
      <set>
        <option value="JAVA" />
      </set>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2piSV7RAUrWIRLvRz5ENSp03NcK" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.EC_Registry/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc1.yml.ec_customer_a: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc1.yml.kafka: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc1.yml.zookeeper: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc1.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc2.yml.ec_central: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc2.yml.ec_ctc: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc2.yml.nginx: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc2.yml.postgres: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc2.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc3.yml.ec_de_1: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc3.yml.ec_de_2: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc3.yml.ec_de_3: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc3.yml.ec_registry: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.pc3.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.taxi-tracker-nginx/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_CENTRAL [clean,compile,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_CENTRAL [clean,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_CTC [clean,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_Registry [clean,compile,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_Registry [clean,install,-DskipTests].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_Registry [clean,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_Registry [clean,package,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_Registry [clean,package].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_Registry [clean].executor&quot;: &quot;Run&quot;,
    &quot;Maven.EC_Registry [install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.easy-cab [-f,/build/EC_DE/pom.xml,clean...].executor&quot;: &quot;Run&quot;,
    &quot;Maven.easy-cab [clean,compile,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.easy-cab [clean,install,-DskipTests].executor&quot;: &quot;Run&quot;,
    &quot;Maven.easy-cab [clean,install,-U].executor&quot;: &quot;Run&quot;,
    &quot;Maven.easy-cab [clean,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.easy-cab [deploy].executor&quot;: &quot;Run&quot;,
    &quot;Maven.easy-cab [rm,-rf...].executor&quot;: &quot;Run&quot;,
    &quot;Maven.ec-customer [clean,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.ec-de [clean,compile,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.ec-de [clean,install].executor&quot;: &quot;Run&quot;,
    &quot;Maven.ec-de [clean,package,install].executor&quot;: &quot;Run&quot;,
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;Spring Boot.EcDeApplication.executor&quot;: &quot;Run&quot;,
    &quot;Spring Boot.EcRegistryApplication.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;develop&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/joelt/OneDrive/Escritorio/logging-library&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\joelt\OneDrive\Escritorio\easy-cab-prac-master\EC_DE\src\main\java\org\example\ec_de" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\joelt\OneDrive\Escritorio\easy-cab-prac-master" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn -f /build/EC_DE/pom.xml clean install -DskipTests " />
      <command value="mvn rm -rf ~/.m2/repository/org/example mvn clean install compile" />
      <command value="mvn deploy" />
      <command value="mvn clean install -DskipTests " />
      <command value="mvn clean install -U " />
      <command value="mvn clean install " />
    </option>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.pc2.yml.postgres: Compose Deployment">
    <configuration name="ECCustomerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="ec-customer" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.ec_customer.ECCustomerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EC_S" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="ec-s" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.ec_s.EC_S" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EcCentralApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="EC_CENTRAL" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.ec_central.EcCentralApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EcCtcApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="EC_CTC" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.ec_ctc.EcCtcApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EcDeApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <envs>
        <env name="SPRING_APPLICATION_NAME" value="EC_DE,SPRING_KAFKA_BOOTSTRAP-SERVERS=192.168.1.3:9092,CENTRAL_IP=192.168.1.5,CENTRAL_PORT=8081,TAXI_ID=1,SENSOR_PORT=5001 " />
      </envs>
      <module name="ec-de" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.ec_de.EcDeApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EcRegistryApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="EC_Registry" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.ec_registry.EcRegistryApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.pc2.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.pc2.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.pc2.yml.ec_central: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="ec_central" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.pc2.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.pc2.yml.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.pc2.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.pc3.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.pc3.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.pc3.yml.ec_de_1: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="ec_de_1" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.pc3.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.pc2.yml.postgres: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.pc3.yml: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.pc2.yml: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.pc3.yml.ec_de_1: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.pc2.yml.ec_central: Compose Deployment" />
      <item itemvalue="Spring Boot.EcCtcApplication" />
      <item itemvalue="Spring Boot.EcRegistryApplication" />
      <item itemvalue="Spring Boot.ECCustomerApplication" />
      <item itemvalue="Spring Boot.EC_S" />
      <item itemvalue="Spring Boot.EcCentralApplication" />
      <item itemvalue="Spring Boot.EcDeApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.pc2.yml.postgres: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.pc3.yml.ec_de_1: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.pc2.yml.ec_central: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.pc3.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.pc2.yml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b8c5b401-c15d-402e-ace1-91795e06d5ae" name="Changes" comment="" />
      <created>1733247432017</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1733247432017</updated>
      <workItem from="1733247457830" duration="6290000" />
      <workItem from="1733592860648" duration="19000" />
      <workItem from="1733592937716" duration="206000" />
      <workItem from="1733594017148" duration="5547000" />
      <workItem from="1733651926256" duration="9330000" />
      <workItem from="1733669987671" duration="153000" />
      <workItem from="1733670169414" duration="13220000" />
      <workItem from="1733833261701" duration="2966000" />
      <workItem from="1733837724772" duration="282000" />
      <workItem from="1733838051436" duration="212000" />
      <workItem from="1733838415312" duration="46419000" />
      <workItem from="1733949601165" duration="3938000" />
      <workItem from="1734016988716" duration="166000" />
      <workItem from="1734017181781" duration="13919000" />
      <workItem from="1734204558008" duration="4104000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>